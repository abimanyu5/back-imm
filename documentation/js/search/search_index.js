var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.283,1,2.053]],["body/controllers/AppController.html",[0,2.007,1,3.212,2,1.584,3,0.379,4,0.328,5,0.328,6,3.282,7,0.606,8,1.699,9,4.801,10,1.584,11,0.032,12,0.882,13,3.931,14,1.341,15,2.007,16,0.617,17,0.807,18,2.875,19,3.282,20,0.379,21,0.019,22,2.066,23,3.282,24,1.456,25,3.931,26,0.025,27,0.025]],["title/modules/AppModule.html",[28,1.086,29,2.053]],["body/modules/AppModule.html",[1,2.972,2,1.6,3,0.27,4,0.234,5,0.234,11,0.032,16,0.727,17,0.576,18,2.889,19,2.342,20,0.27,21,0.013,26,0.02,27,0.02,28,1.573,29,3.979,30,1.231,31,1.231,32,1.475,33,1.475,34,1.231,35,2.424,36,1.475,37,2.342,38,2.342,39,2.342,40,3.186,41,2.412,42,3.186,43,3.186,44,2.088,45,1.475,46,1.475,47,2.806,48,2.56,49,2.806,50,2.806,51,2.806,52,2.806,53,2.806,54,2.342,55,2.342,56,2.342,57,2.806,58,2.806,59,2.806,60,2.806,61,2.806,62,2.806]],["title/injectables/AppService.html",[18,1.674,63,0.921]],["body/injectables/AppService.html",[3,0.4,4,0.346,5,0.346,7,0.639,8,1.758,9,4.895,11,0.031,12,0.93,14,1.415,15,2.076,16,0.514,17,0.852,18,2.709,20,0.4,21,0.02,24,1.537,26,0.025,27,0.025,63,1.49,64,1.989,65,3.464,66,4.149,67,4.149,68,4.149]],["title/controllers/AuthController.html",[0,1.283,69,2.053]],["body/controllers/AuthController.html",[0,0.886,2,0.886,3,0.212,4,0.183,5,0.4,7,0.339,8,1.133,10,1.798,11,0.032,12,1.001,14,1.522,16,0.649,17,0.451,20,0.212,21,0.011,22,1.156,24,1.654,26,0.016,27,0.016,69,2.142,70,1.835,71,1.596,72,2.198,73,2.541,74,2.774,75,2.774,76,2.774,77,2.774,78,2.198,79,4.005,80,2.198,81,2.198,82,1.798,83,1.654,84,0.822,85,1.522,86,4.208,87,2.14,88,1.835,89,2.588,90,3.323,91,2.198,92,2.877,93,2.198,94,2.198,95,2.198,96,1.835,97,2.588,98,3.323,99,2.198,100,1.596,101,1.596,102,1.835,103,3.323,104,3.323,105,2.105,106,1.835,107,1.835,108,1.835,109,1.274,110,2.198,111,2.198,112,1.835,113,1.835,114,3.323,115,2.198,116,2.198,117,2.198,118,2.198,119,2.198,120,2.198,121,2.774,122,2.198,123,2.198,124,1.593,125,2.198,126,2.198,127,2.198,128,2.198,129,2.198,130,2.198,131,2.198,132,2.198,133,2.198,134,2.198,135,2.198,136,2.198,137,2.198,138,2.198,139,2.198]],["title/classes/AuthGuard.html",[21,0.015,109,1.846]],["body/classes/AuthGuard.html",[3,0.521,4,0.28,5,0.28,7,0.517,8,1.532,11,0.032,12,1.007,14,1.532,16,0.557,17,0.688,20,0.323,21,0.016,24,1.664,26,0.022,27,0.022,82,1.81,83,1.664,84,0.688,85,1.532,109,2.936,140,1.351,141,2.8,142,4.493,143,4.493,144,4.493,145,5.411,146,3.354,147,3.354,148,4.493,149,4.095,150,3.354,151,5.066,152,4.493,153,3.354,154,2.162,155,2.162,156,3.354,157,3.354,158,2.435,159,2.162]],["title/modules/AuthModule.html",[28,1.086,40,1.846]],["body/modules/AuthModule.html",[2,1.644,3,0.281,4,0.243,5,0.243,11,0.032,16,0.722,17,0.598,20,0.281,21,0.014,26,0.02,27,0.02,28,1.606,30,1.279,31,1.279,32,1.532,33,1.532,34,1.279,35,2.475,36,1.532,40,3.478,41,2.442,44,2.145,45,1.532,46,1.532,48,2.63,69,3.035,105,2.925,106,2.433,149,2.116,154,1.879,160,2.433,161,2.915,162,2.433,163,3.225,164,2.915,165,2.915,166,2.116,167,2.915,168,2.116,169,2.915,170,1.69,171,2.116,172,2.915,173,2.915,174,2.915,175,2.116,176,2.915,177,2.915,178,2.433,179,2.915,180,2.116,181,2.116,182,2.915,183,2.433,184,2.433]],["title/injectables/AuthService.html",[63,0.921,105,1.674]],["body/injectables/AuthService.html",[3,0.146,4,0.127,5,0.127,7,0.234,8,0.846,11,0.032,12,0.965,14,1.367,16,0.563,17,0.311,20,0.146,21,0.007,22,0.798,24,1.485,26,0.012,27,0.012,63,0.717,64,0.727,73,2.313,74,3.791,75,2.627,76,2.071,77,2.071,82,1.734,83,1.755,84,0.883,85,1.468,87,1.743,88,2.071,89,2.107,92,2.774,96,2.071,97,2.107,105,1.304,107,1.267,108,1.267,124,2.271,149,1.801,158,2.91,159,2.584,168,1.101,170,0.88,171,1.101,180,1.101,181,1.101,183,1.267,184,1.267,185,1.267,186,2.481,187,2.481,188,0.978,189,1.101,190,1.595,191,4.541,192,1.517,193,1.801,194,2.481,195,1.517,196,1.267,197,1.517,198,2.481,199,2.262,200,1.517,201,4.009,202,1.517,203,2.481,204,1.517,205,2.481,206,1.517,207,1.101,208,1.517,209,2.481,210,1.267,211,1.267,212,3.054,213,4.303,214,3.636,215,2.107,216,2.481,217,3.147,218,1.517,219,1.517,220,1.517,221,2.481,222,1.517,223,1.517,224,2.481,225,1.517,226,3.035,227,2.627,228,2.627,229,1.517,230,2.071,231,2.481,232,2.481,233,1.517,234,3.147,235,1.517,236,1.517,237,1.517,238,1.517,239,1.517,240,2.481,241,1.101,242,1.517,243,1.517,244,1.517,245,3.147,246,1.654,247,1.517,248,3.636,249,0.88,250,1.517,251,2.481,252,1.517,253,1.517,254,1.517,255,1.267,256,1.517]],["title/classes/CreateSchoolDto.html",[21,0.015,257,1.674]],["body/classes/CreateSchoolDto.html",[3,0.312,4,0.27,5,0.27,7,0.498,10,2.148,11,0.031,12,1.196,15,2.408,16,0.401,20,0.312,21,0.021,26,0.022,27,0.022,84,1.094,85,1.959,140,1.304,215,2.883,257,2.305,258,4.652,259,2.349,260,1.924,261,4.974,262,4.974,263,4.974,264,4.385,265,3.236,266,3.236,267,3.236,268,3.236,269,3.236,270,3.236,271,3.183,272,2.827,273,4.451,274,3.23,275,1.701]],["title/classes/CreateTaskDto.html",[21,0.015,276,1.846]],["body/classes/CreateTaskDto.html",[3,0.352,4,0.305,5,0.305,7,0.563,10,1.914,11,0.031,12,1.185,15,2.254,16,0.453,20,0.352,21,0.023,26,0.023,27,0.023,84,1.084,140,1.471,199,2.498,260,2.085,272,3.405,274,3.062,275,1.92,276,2.755,277,4.67,278,2.651,279,3.835,280,3.405,281,3.405,282,3.049,283,3.967,284,3.049,285,3.049]],["title/injectables/JwtStrategy.html",[63,0.921,163,1.846]],["body/injectables/JwtStrategy.html",[3,0.321,4,0.278,5,0.278,7,0.512,8,1.524,11,0.032,12,1.002,14,1.135,16,0.668,17,0.683,20,0.321,21,0.016,24,1.233,26,0.022,27,0.022,63,1.292,64,1.595,73,2.214,82,1.34,83,1.233,84,0.683,85,1.135,87,1.595,154,2.145,155,2.145,163,2.59,170,1.929,171,2.415,175,3.244,178,2.777,181,2.415,188,3.252,196,2.777,215,1.929,246,1.749,286,2.777,287,4.468,288,3.327,289,4.468,290,3.327,291,3.327,292,3.327,293,3.327,294,2.777,295,3.327,296,3.327,297,3.327,298,3.327,299,3.327,300,3.327,301,3.327,302,3.327,303,2.777,304,3.327]],["title/classes/LoginDto.html",[21,0.015,89,1.846]],["body/classes/LoginDto.html",[3,0.365,4,0.316,5,0.316,7,0.583,10,1.96,11,0.031,12,1.091,15,2.285,16,0.469,20,0.365,21,0.023,26,0.024,27,0.024,84,0.998,89,2.82,140,1.525,215,3.115,241,3.901,260,2.135,271,3.531,272,3.464,274,2.82,275,1.99,305,3.161,306,3.161,307,3.787,308,3.161,309,3.787,310,3.161,311,3.161,312,3.161,313,3.161]],["title/modules/PrismaModule.html",[28,1.086,41,1.398]],["body/modules/PrismaModule.html",[3,0.358,4,0.31,5,0.31,11,0.031,16,0.596,17,0.763,20,0.358,21,0.018,26,0.024,27,0.024,28,1.817,30,1.632,31,1.632,32,1.954,33,1.954,34,1.632,35,2.801,36,2.801,41,2.668,44,2.527,45,1.954,46,1.954,190,2.791,314,3.104,315,3.104,316,3.104,317,3.718,318,3.718]],["title/injectables/PrismaService.html",[63,0.921,190,1.398]],["body/injectables/PrismaService.html",[3,0.329,4,0.284,5,0.284,7,0.525,8,1.549,11,0.032,12,1.019,14,1.549,16,0.563,17,0.7,20,0.329,21,0.016,26,0.022,27,0.022,63,1.313,64,1.635,73,2.613,82,1.374,83,1.263,84,0.7,85,1.163,124,2.177,155,2.928,190,1.993,319,2.847,320,5.108,321,4.542,322,5.834,323,4.542,324,5.447,325,3.41,326,2.847,327,3.41,328,2.847,329,3.41,330,3.41,331,3.41,332,3.41]],["title/classes/RegisterDto.html",[21,0.015,97,1.846]],["body/classes/RegisterDto.html",[3,0.343,4,0.297,5,0.297,7,0.548,10,2.101,11,0.031,12,1.17,15,2.378,16,0.441,20,0.343,21,0.022,26,0.023,27,0.023,83,1.932,84,1.07,97,2.708,140,1.433,215,3.023,241,3.786,260,2.05,271,3.391,272,3.57,274,3.023,275,1.87,283,2.97,306,2.97,308,2.97,310,2.97,311,2.97,312,2.97,313,2.97,333,2.97,334,3.558,335,3.558,336,3.558]],["title/classes/School.html",[21,0.015,337,1.846]],["body/classes/School.html",[3,0.457,4,0.396,5,0.396,11,0.029,20,0.457,21,0.023,26,0.028,27,0.028,140,1.913,337,3.241,338,3.963]],["title/controllers/SchoolController.html",[0,1.283,339,2.053]],["body/controllers/SchoolController.html",[0,0.907,2,0.907,3,0.217,4,0.188,5,0.188,7,0.347,8,1.154,10,1.951,11,0.032,12,1.086,14,1.652,15,2.238,16,0.56,17,0.462,20,0.217,21,0.011,22,1.184,23,1.88,24,1.795,26,0.017,27,0.017,71,1.635,73,2.63,82,1.821,83,1.674,84,0.927,85,1.541,87,2.322,100,2.951,101,2.457,124,2.322,246,2.674,257,2.674,337,1.306,339,2.181,340,1.88,341,2.457,342,3.772,343,2.825,344,2.825,345,3.393,346,1.88,347,2.253,348,2.253,349,1.88,350,3.384,351,2.253,352,1.88,353,3.384,354,2.253,355,1.88,356,3.148,357,3.384,358,2.253,359,1.88,360,1.88,361,1.88,362,2.137,363,1.88,364,1.452,365,2.457,366,1.452,367,2.253,368,2.253,369,2.253,370,2.253,371,2.253,372,2.253,373,2.253,374,2.253,375,2.253,376,2.253]],["title/modules/SchoolModule.html",[28,1.086,42,1.846]],["body/modules/SchoolModule.html",[2,1.861,3,0.337,4,0.292,5,0.292,11,0.031,16,0.682,17,0.718,20,0.337,21,0.017,26,0.023,27,0.023,28,1.764,30,1.535,31,1.535,32,1.838,33,1.838,34,1.535,35,2.718,36,1.838,41,2.578,42,3.526,44,2.428,45,1.838,46,1.838,48,2.977,166,2.538,339,3.334,362,3.088,363,2.919,377,2.919,378,3.497,379,2.919,380,3.497,381,3.497]],["title/injectables/SchoolService.html",[63,0.921,362,1.674]],["body/injectables/SchoolService.html",[3,0.207,4,0.18,5,0.18,7,0.332,8,1.115,11,0.032,12,1.121,14,1.62,16,0.547,17,0.442,20,0.207,21,0.01,22,1.131,24,1.759,26,0.016,27,0.016,63,0.946,64,1.032,73,2.609,82,1.913,83,1.759,84,0.975,85,1.62,87,2.276,92,2.108,124,2.397,158,1.562,159,1.387,188,1.387,189,1.562,190,1.938,193,2.374,199,2.883,207,1.562,212,1.387,230,1.797,246,2.988,257,2.628,337,1.248,341,2.374,342,3.686,343,2.729,344,2.729,345,2.729,346,2.729,349,2.729,352,2.729,355,2.729,356,3.104,362,1.719,364,1.387,365,2.374,366,1.387,382,1.797,383,2.152,384,2.152,385,2.152,386,2.152,387,2.152,388,2.152,389,2.152,390,2.152,391,2.152,392,3.27,393,2.152,394,3.27,395,2.152,396,2.152]],["title/interfaces/Task.html",[397,2.053,398,1.846]],["body/interfaces/Task.html",[3,0.321,4,0.278,5,0.278,7,0.512,11,0.032,15,2.334,20,0.431,26,0.022,27,0.022,84,1.035,199,2.652,212,2.145,249,1.929,260,1.961,280,3.815,281,3.815,397,2.145,398,3.532,399,3.327,400,2.415,401,4.94,402,3.662,403,3.252,404,4.211,405,4.211]],["title/controllers/TaskController.html",[0,1.283,406,2.053]],["body/controllers/TaskController.html",[0,0.905,2,0.905,3,0.216,4,0.187,5,0.187,7,0.346,8,1.152,10,1.949,11,0.032,12,1.085,14,1.65,16,0.6,17,0.461,20,0.216,21,0.011,22,1.181,24,1.793,26,0.017,27,0.017,71,1.631,73,2.629,82,1.818,83,1.672,84,0.693,85,1.539,87,2.319,100,2.451,101,3.938,102,1.875,109,1.302,121,4.039,124,2.319,246,2.672,276,2.616,359,1.875,360,1.875,361,1.875,364,1.448,366,1.448,398,1.302,406,2.177,407,1.875,408,2.819,409,2.819,410,3.767,411,2.819,412,2.819,413,2.246,414,2.246,415,2.246,416,1.875,417,2.246,418,2.246,419,2.246,420,2.246,421,1.875,422,2.246,423,2.246,424,1.875,425,2.616,426,2.246,427,2.246,428,2.246,429,2.246,430,2.133,431,1.875,432,2.819,433,2.246,434,2.246,435,2.246,436,2.246,437,2.246,438,2.246,439,2.246,440,2.246,441,2.246,442,2.246,443,2.246,444,2.246,445,2.246,446,2.246,447,2.246]],["title/modules/TaskModule.html",[28,1.086,43,1.846]],["body/modules/TaskModule.html",[2,1.861,3,0.337,4,0.292,5,0.292,11,0.031,16,0.682,17,0.718,20,0.337,21,0.017,26,0.023,27,0.023,28,1.764,30,1.535,31,1.535,32,1.838,33,1.838,34,1.535,35,2.718,36,1.838,41,2.578,43,3.526,44,2.428,45,1.838,46,1.838,48,2.977,166,2.538,406,3.334,430,3.088,431,2.919,448,2.919,449,2.919,450,3.497,451,3.497,452,3.497]],["title/injectables/TaskService.html",[63,0.921,430,1.674]],["body/injectables/TaskService.html",[3,0.166,4,0.144,5,0.144,7,0.266,8,0.938,11,0.032,12,1.023,14,1.46,16,0.593,17,0.564,20,0.166,21,0.008,24,1.842,26,0.014,27,0.014,63,0.795,64,0.826,73,2.495,82,1.724,83,1.586,84,0.804,85,1.46,86,2.865,87,2.051,92,3.664,124,2.051,188,1.773,189,1.251,190,1.719,193,1.997,199,1.804,207,1.251,211,2.296,212,2.759,226,4.149,227,3.573,228,2.865,246,2.693,249,0.999,255,1.439,276,2.271,279,1.997,364,1.111,366,1.111,408,2.296,409,2.296,410,3.27,411,3.573,412,2.296,416,2.296,421,2.296,424,2.296,425,2.271,430,1.446,432,2.296,453,1.439,454,1.724,455,2.751,456,1.724,457,1.724,458,1.724,459,1.724,460,1.724,461,1.724,462,1.439,463,1.724,464,1.724,465,2.751,466,3.917,467,1.724,468,2.751,469,1.724,470,3.432,471,3.432,472,2.751,473,1.724,474,2.751,475,1.724,476,1.724,477,1.724,478,1.724,479,2.751,480,1.724,481,1.724,482,1.724,483,2.751,484,1.724]],["title/classes/UpdateSchoolDto.html",[21,0.015,356,1.846]],["body/classes/UpdateSchoolDto.html",[3,0.421,4,0.364,5,0.364,11,0.031,16,0.659,20,0.421,21,0.021,26,0.026,27,0.026,140,1.76,155,2.817,257,2.297,259,3.172,341,3.172,356,3.084,365,3.172,485,3.648,486,4.37,487,3.648,488,3.648,489,4.37]],["title/classes/UpdateTaskDto.html",[21,0.015,425,1.846]],["body/classes/UpdateTaskDto.html",[3,0.346,4,0.299,5,0.299,7,0.553,10,1.893,11,0.031,12,1.175,15,2.239,16,0.445,20,0.346,21,0.023,26,0.023,27,0.023,84,1.075,85,1.895,140,1.446,199,2.469,260,2.062,273,4.372,274,3.036,275,1.886,278,2.605,279,3.802,280,3.376,281,3.376,282,2.995,284,2.995,285,2.995,425,2.723,490,4.639,491,4.698]],["title/coverage.html",[492,3.149]],["body/coverage.html",[0,1.975,1,1.72,5,0.223,6,2.228,11,0.032,18,1.403,21,0.027,26,0.019,27,0.019,34,1.171,63,1.563,65,2.228,69,1.72,70,2.228,84,0.548,89,1.547,97,1.547,105,1.403,109,1.547,141,2.228,159,1.72,163,1.547,170,1.547,185,2.228,190,1.171,249,1.547,257,1.403,258,2.228,259,2.783,276,1.547,277,2.228,278,2.783,286,2.228,305,2.228,319,2.228,333,2.228,337,1.547,338,2.228,339,1.72,340,2.228,356,1.547,362,1.403,382,2.228,397,1.72,398,1.547,400,2.783,406,1.72,407,2.228,425,1.547,430,1.403,453,2.228,485,2.228,490,2.228,492,1.937,493,2.669,494,2.669,495,2.669,496,6.353,497,3.833,498,3.833,499,4.903,500,4.486,501,4.903,502,2.228,503,3.833,504,5.193,505,2.228,506,2.669,507,3.833,508,2.669,509,2.669]],["title/dependencies.html",[31,1.68,510,2.224]],["body/dependencies.html",[11,0.032,17,0.736,21,0.023,26,0.023,27,0.023,31,1.575,54,2.995,55,2.995,112,2.995,113,2.995,154,2.313,168,2.605,175,3.41,210,2.995,275,1.886,294,3.922,328,2.995,462,2.995,487,2.995,488,2.995,511,3.589,512,3.589,513,4.698,514,3.589,515,3.589,516,3.589,517,3.589,518,3.589,519,3.589,520,3.589,521,3.589,522,3.589,523,3.589,524,3.589,525,3.589,526,3.589,527,3.589,528,3.589,529,3.589,530,3.589,531,3.589,532,3.589,533,3.589,534,3.589,535,3.589]],["title/miscellaneous/functions.html",[536,1.717,537,3.196]],["body/miscellaneous/functions.html",[7,0.74,11,0.028,26,0.028,27,0.028,34,2.621,505,4.01,536,3.096,537,4.01,538,4.803]],["title/index.html",[7,0.41,539,2.665,540,2.665]],["body/index.html",[4,0.269,11,0.031,26,0.022,27,0.022,56,2.69,326,2.69,403,2.078,492,2.34,541,3.223,542,3.223,543,4.373,544,3.223,545,3.223,546,3.223,547,3.223,548,3.223,549,3.223,550,4.964,551,3.223,552,3.223,553,3.223,554,3.223,555,5.87,556,3.223,557,3.223,558,5.739,559,3.223,560,3.223,561,4.373,562,3.223,563,3.223,564,3.223,565,3.223,566,4.373,567,4.373,568,3.223,569,3.223,570,3.223,571,4.373,572,4.373,573,3.223,574,3.223,575,3.223,576,3.223,577,3.223,578,2.69,579,3.223,580,3.223,581,3.223,582,3.223,583,3.223,584,3.223,585,3.223,586,3.223,587,3.223,588,2.69,589,3.223,590,3.223,591,3.223,592,3.223,593,3.223,594,3.223,595,2.69]],["title/modules.html",[30,1.904]],["body/modules.html",[11,0.026,26,0.026,27,0.026,29,2.802,30,1.907,40,2.52,41,1.907,42,2.52,43,2.52,578,5.101,596,6.11,597,6.11,598,6.11]],["title/overview.html",[599,3.622]],["body/overview.html",[2,1.195,11,0.031,18,2.499,26,0.02,27,0.02,28,1.012,29,3.957,30,1.302,31,1.302,32,1.56,33,1.56,34,1.302,35,1.56,36,1.56,37,2.477,38,2.477,39,2.477,40,3.447,41,2.61,42,3.328,43,3.328,44,2.172,45,1.56,46,1.56,64,1.422,105,2.499,140,1.195,160,2.477,162,2.477,163,2.755,190,2.519,314,2.477,315,2.477,316,2.477,362,2.499,377,2.477,379,2.477,397,1.913,402,2.154,430,2.499,448,2.477,449,2.477,599,2.477,600,2.967,601,2.967,602,2.967,603,2.967]],["title/properties.html",[260,1.68,510,2.224]],["body/properties.html",[11,0.031,26,0.028,27,0.028,260,2.072,403,3.043,588,3.941,595,3.941,604,4.721,605,4.721,606,4.721]],["title/miscellaneous/variables.html",[536,1.717,607,3.196]],["body/miscellaneous/variables.html",[7,0.55,11,0.032,26,0.023,27,0.023,84,0.961,170,2.715,180,2.594,249,2.715,280,3.369,281,3.369,303,2.982,398,3.491,400,2.594,401,4.363,402,3.794,403,3.369,404,4.363,405,4.363,502,2.982,536,2.303,607,2.982,608,3.573,609,3.573,610,3.573,611,4.685,612,4.685,613,3.573,614,3.573]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":496,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":605,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":504,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":497,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":499,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":501,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":498,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":507,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":500,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":402,"title":{},"body":{"interfaces/Task.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.1.21",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":404,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["200",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["3",{"_index":405,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["3.0.1",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["3.0.8",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["3600",{"_index":614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":601,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["4.16.0",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":468,"title":{},"body":{"injectables/TaskService.html":{}}}],["5",{"_index":600,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":482,"title":{},"body":{"injectables/TaskService.html":{}}}],["6",{"_index":602,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":603,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["9.4.2",{"_index":516,"title":{},"body":{"dependencies.html":{}}}],["accestoken",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["address",{"_index":261,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["alredy",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":579,"title":{},"body":{"index.html":{}}}],["app",{"_index":326,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":332,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":549,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["auth",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.service",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":69,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":109,"title":{"classes/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["authguardpassport",{"_index":153,"title":{},"body":{"classes/AuthGuard.html":{}}}],["authguardpassport('jwt",{"_index":156,"title":{},"body":{"classes/AuthGuard.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":588,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":105,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["avatar(@req",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["avatar(req",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{}}}],["await",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["backers",{"_index":580,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["berhasil",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["body",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":598,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":596,"title":{},"body":{"modules.html":{}}}],["building",{"_index":544,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":142,"title":{},"body":{"classes/AuthGuard.html":{}}}],["canactivate(context",{"_index":144,"title":{},"body":{"classes/AuthGuard.html":{}}}],["catch",{"_index":481,"title":{},"body":{"injectables/TaskService.html":{}}}],["cb",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["cb(null",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["checkid",{"_index":394,"title":{},"body":{"injectables/SchoolService.html":{}}}],["checkpassword",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.email",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.id",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.name",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.password",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":21,"title":{"classes/AuthGuard.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":140,"title":{},"body":{"classes/AuthGuard.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":314,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":315,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":316,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_schoolmodule",{"_index":377,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_imports",{"_index":378,"title":{},"body":{"modules/SchoolModule.html":{}}}],["cluster_schoolmodule_providers",{"_index":379,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":448,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_imports",{"_index":450,"title":{},"body":{"modules/TaskModule.html":{}}}],["cluster_taskmodule_providers",{"_index":449,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["compare",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["compodoc/compodoc",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["const",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["constructor",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(prisma",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{}}}],["context",{"_index":147,"title":{},"body":{"classes/AuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('school",{"_index":367,"title":{},"body":{"controllers/SchoolController.html":{}}}],["controller('task",{"_index":434,"title":{},"body":{"controllers/TaskController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["coverage",{"_index":492,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":341,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{}}}],["create(@body",{"_index":368,"title":{},"body":{"controllers/SchoolController.html":{}}}],["create(createschooldto",{"_index":346,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["created",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["createdata",{"_index":472,"title":{},"body":{"injectables/TaskService.html":{}}}],["createschooldto",{"_index":257,"title":{"classes/CreateSchoolDto.html":{}},"body":{"classes/CreateSchoolDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["createtask",{"_index":408,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["createtask(@body",{"_index":436,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(body",{"_index":413,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(data",{"_index":455,"title":{},"body":{"injectables/TaskService.html":{}}}],["createtaskdto",{"_index":276,"title":{"classes/CreateTaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["createuser",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["data",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["data.email",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.id_user",{"_index":465,"title":{},"body":{"injectables/TaskService.html":{}}}],["data.password",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.task_name",{"_index":467,"title":{},"body":{"injectables/TaskService.html":{}}}],["data/task",{"_index":461,"title":{},"body":{"injectables/TaskService.html":{}}}],["dataprofile",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"classes/UpdateTaskDto.html":{}}}],["default",{"_index":611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["delete",{"_index":361,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["delete('/:id",{"_index":445,"title":{},"body":{"controllers/TaskController.html":{}}}],["delete(':id",{"_index":353,"title":{},"body":{"controllers/SchoolController.html":{}}}],["deletedata",{"_index":483,"title":{},"body":{"injectables/TaskService.html":{}}}],["deletetask",{"_index":409,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["deletetask(@param('id",{"_index":446,"title":{},"body":{"controllers/TaskController.html":{}}}],["deletetask(id",{"_index":416,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":403,"title":{},"body":{"interfaces/Task.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["destination",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["development",{"_index":557,"title":{},"body":{"index.html":{}}}],["diskstorage",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["ditemukan",{"_index":471,"title":{},"body":{"injectables/TaskService.html":{}}}],["documentation",{"_index":493,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":364,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dto/login.dto",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/register.dto",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":366,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["e2e",{"_index":568,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":545,"title":{},"body":{"index.html":{}}}],["email",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["enableshutdownhooks",{"_index":321,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":323,"title":{},"body":{"injectables/PrismaService.html":{}}}],["err",{"_index":151,"title":{},"body":{"classes/AuthGuard.html":{}}}],["executioncontext",{"_index":145,"title":{},"body":{"classes/AuthGuard.html":{}}}],["expired",{"_index":303,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["express",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["extends",{"_index":155,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateSchoolDto.html":{}}}],["extractjwt",{"_index":292,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":298,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["file.originalname",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor('avatar",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["filename",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["findall",{"_index":342,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findone",{"_index":343,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findone(@param('id",{"_index":371,"title":{},"body":{"controllers/SchoolController.html":{}}}],["findone(id",{"_index":349,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["found",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["framework",{"_index":543,"title":{},"body":{"index.html":{}}}],["function",{"_index":506,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":537,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generatejwt",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatejwt(payload",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/:id",{"_index":439,"title":{},"body":{"controllers/TaskController.html":{}}}],["get(':id",{"_index":350,"title":{},"body":{"controllers/SchoolController.html":{}}}],["get('profile",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["getalldata",{"_index":474,"title":{},"body":{"injectables/TaskService.html":{}}}],["getalltask",{"_index":410,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gettaskbyid",{"_index":411,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["gettaskbyid(@param('id",{"_index":440,"title":{},"body":{"controllers/TaskController.html":{}}}],["gettaskbyid(id",{"_index":421,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["getting",{"_index":539,"title":{"index.html":{}},"body":{}}],["grow",{"_index":575,"title":{},"body":{"index.html":{}}}],["handlerequest",{"_index":143,"title":{},"body":{"classes/AuthGuard.html":{}}}],["handlerequest(err",{"_index":148,"title":{},"body":{"classes/AuthGuard.html":{}}}],["hash",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash(data.password",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":585,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('bad",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('user",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":592,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.bad_request",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.found",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.not_found",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.ok",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.unauthorized",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["id_user",{"_index":279,"title":{},"body":{"classes/CreateTaskDto.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["identifier",{"_index":494,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":299,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["immapp",{"_index":613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":329,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":324,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["inject",{"_index":463,"title":{},"body":{"injectables/TaskService.html":{}}}],["inject(request",{"_index":464,"title":{},"body":{"injectables/TaskService.html":{}}}],["injectable",{"_index":63,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["injectables",{"_index":64,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"overview.html":{}}}],["installation",{"_index":554,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":556,"title":{},"body":{"index.html":{}}}],["interface",{"_index":397,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":399,"title":{},"body":{"interfaces/Task.html":{}}}],["isemail",{"_index":271,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty",{"_index":272,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty()@isemail",{"_index":306,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty()@isstring",{"_index":283,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty()@isstring()@minlength(6)@maxlength(20",{"_index":308,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isoptional",{"_index":273,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["isoptional()@isstring",{"_index":491,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["isstring",{"_index":274,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateTaskDto.html":{}}}],["isstring()@isnotempty",{"_index":269,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["isstring()@isoptional",{"_index":264,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["isstring()@isoptional()@isemail",{"_index":266,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["join",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt_config",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwt_config.expired",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwt_config.secret",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":297,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":163,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":589,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["license",{"_index":595,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":572,"title":{},"body":{"index.html":{}}}],["login",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(data",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":89,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["match",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":311,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["maxlength(20",{"_index":313,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["message",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["metadata",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["minlength",{"_index":310,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["minlength(6",{"_index":312,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["miscellaneous",{"_index":536,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":571,"title":{},"body":{"index.html":{}}}],["mode",{"_index":561,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":584,"title":{},"body":{"index.html":{}}}],["multer",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["myśliwiec",{"_index":590,"title":{},"body":{"index.html":{}}}],["name",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["nest",{"_index":550,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":594,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":462,"title":{},"body":{"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":487,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":154,"title":{},"body":{"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":159,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["node.js",{"_index":542,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":389,"title":{},"body":{"injectables/SchoolService.html":{}}}],["notfoundexception('id",{"_index":395,"title":{},"body":{"injectables/SchoolService.html":{}}}],["npm",{"_index":555,"title":{},"body":{"index.html":{}}}],["null",{"_index":477,"title":{},"body":{"injectables/TaskService.html":{}}}],["number",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateTaskDto.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["object",{"_index":610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onmoduleinit",{"_index":322,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":573,"title":{},"body":{"index.html":{}}}],["optional",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["out",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["overview",{"_index":599,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":510,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":360,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["param('id",{"_index":373,"title":{},"body":{"controllers/SchoolController.html":{}}}],["parameter",{"_index":469,"title":{},"body":{"injectables/TaskService.html":{}}}],["parameters",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["partialtype",{"_index":486,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["partialtype(createschooldto",{"_index":489,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["passport",{"_index":294,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":291,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":295,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["patch",{"_index":359,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["patch('/:id",{"_index":442,"title":{},"body":{"controllers/TaskController.html":{}}}],["patch(':id",{"_index":357,"title":{},"body":{"controllers/SchoolController.html":{}}}],["path",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":302,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.exp",{"_index":304,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":301,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["phone",{"_index":262,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["please",{"_index":582,"title":{},"body":{"index.html":{}}}],["post",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["post('avatar",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["prisma",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["prisma.service",{"_index":318,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":328,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":320,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":41,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":190,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["production",{"_index":563,"title":{},"body":{"index.html":{}}}],["profile",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["profile(@req",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(req",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user_id",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["progressive",{"_index":541,"title":{},"body":{"index.html":{}}}],["project",{"_index":574,"title":{},"body":{"index.html":{}}}],["properties",{"_index":260,"title":{"properties.html":{}},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{},"properties.html":{}}}],["property",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["public",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["public/uploads/image",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["read",{"_index":583,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/SchoolController.html":{}}}],["reflect",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(data",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":97,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registered",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["remove",{"_index":344,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["remove(@param('id",{"_index":375,"title":{},"body":{"controllers/SchoolController.html":{}}}],["remove(id",{"_index":352,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["repository",{"_index":553,"title":{},"body":{"index.html":{}}}],["req",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/TaskService.html":{}}}],["req.user.id",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["reset",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["rootpath",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":558,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":546,"title":{},"body":{"index.html":{}}}],["school",{"_index":337,"title":{"classes/School.html":{}},"body":{"classes/School.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["school.controller",{"_index":381,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.dto",{"_index":365,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{}}}],["school.dto.ts",{"_index":259,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["school.dto.ts:11",{"_index":267,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:15",{"_index":265,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:19",{"_index":268,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:6",{"_index":270,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.service",{"_index":363,"title":{},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{}}}],["school/school.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["school_name",{"_index":263,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["schoolcontroller",{"_index":339,"title":{"controllers/SchoolController.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"coverage.html":{}}}],["schoolmodule",{"_index":42,"title":{"modules/SchoolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchoolModule.html":{},"modules.html":{},"overview.html":{}}}],["schoolservice",{"_index":362,"title":{"injectables/SchoolService.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["secret",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":300,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["server",{"_index":547,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{}}}],["side",{"_index":548,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"index.html":{}}}],["sponsors",{"_index":577,"title":{},"body":{"index.html":{}}}],["src/.../config_jwt.ts",{"_index":608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":538,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../task.ts",{"_index":609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":65,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":66,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:23",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:34",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:50",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guard",{"_index":433,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/auth/auth.guard.ts",{"_index":141,"title":{},"body":{"classes/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:10",{"_index":150,"title":{},"body":{"classes/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:6",{"_index":146,"title":{},"body":{"classes/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:32",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:64",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:70",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:90",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":305,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:12",{"_index":307,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:18",{"_index":309,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/register.dto.ts",{"_index":333,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts:12",{"_index":335,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:16",{"_index":334,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:22",{"_index":336,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":286,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":290,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":288,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/config/config_jwt",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/config/config_jwt.ts",{"_index":502,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":505,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":317,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":319,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":327,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:9",{"_index":325,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/school/dto/create",{"_index":258,"title":{},"body":{"classes/CreateSchoolDto.html":{},"coverage.html":{}}}],["src/school/dto/update",{"_index":485,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["src/school/entities/school.entity.ts",{"_index":338,"title":{},"body":{"classes/School.html":{},"coverage.html":{}}}],["src/school/school.controller.ts",{"_index":340,"title":{},"body":{"controllers/SchoolController.html":{},"coverage.html":{}}}],["src/school/school.controller.ts:19",{"_index":347,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:24",{"_index":348,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:29",{"_index":351,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:34",{"_index":358,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:42",{"_index":354,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.module.ts",{"_index":380,"title":{},"body":{"modules/SchoolModule.html":{}}}],["src/school/school.service.ts",{"_index":382,"title":{},"body":{"injectables/SchoolService.html":{},"coverage.html":{}}}],["src/school/school.service.ts:10",{"_index":384,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:16",{"_index":385,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:20",{"_index":386,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:28",{"_index":388,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:37",{"_index":387,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:7",{"_index":383,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/task/data/task.ts",{"_index":400,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/task/dto/create",{"_index":277,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["src/task/dto/update",{"_index":490,"title":{},"body":{"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["src/task/task.controller.ts",{"_index":407,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["src/task/task.controller.ts:25",{"_index":415,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:31",{"_index":420,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:37",{"_index":423,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:43",{"_index":427,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:49",{"_index":418,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.module.ts",{"_index":451,"title":{},"body":{"modules/TaskModule.html":{}}}],["src/task/task.service.ts",{"_index":453,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/task/task.service.ts:10",{"_index":454,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:15",{"_index":456,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:31",{"_index":458,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:41",{"_index":459,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:60",{"_index":460,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:81",{"_index":457,"title":{},"body":{"injectables/TaskService.html":{}}}],["start",{"_index":559,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":562,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":564,"title":{},"body":{"index.html":{}}}],["started",{"_index":540,"title":{"index.html":{}},"body":{}}],["starter",{"_index":552,"title":{},"body":{"index.html":{}}}],["statements",{"_index":495,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["statuscode",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["stay",{"_index":586,"title":{},"body":{"index.html":{}}}],["storage",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["strategy",{"_index":293,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{}}}],["sub",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":296,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":157,"title":{},"body":{"classes/AuthGuard.html":{}}}],["support",{"_index":578,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":597,"title":{},"body":{"modules.html":{}}}],["table",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":398,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"controllers/TaskController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["task.controller",{"_index":452,"title":{},"body":{"modules/TaskModule.html":{}}}],["task.dto",{"_index":432,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["task.dto.ts",{"_index":278,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["task.dto.ts:11",{"_index":282,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["task.dto.ts:5",{"_index":285,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["task.dto.ts:9",{"_index":284,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["task.service",{"_index":431,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["task/task.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["task_description",{"_index":280,"title":{},"body":{"classes/CreateTaskDto.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{},"miscellaneous/variables.html":{}}}],["task_id",{"_index":401,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["task_name",{"_index":281,"title":{},"body":{"classes/CreateTaskDto.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDto.html":{},"miscellaneous/variables.html":{}}}],["taskcontroller",{"_index":406,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskmodule",{"_index":43,"title":{"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["tasks",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskservice",{"_index":430,"title":{"injectables/TaskService.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["test",{"_index":567,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":570,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":569,"title":{},"body":{"index.html":{}}}],["tests",{"_index":566,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":576,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":330,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":331,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(data",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.profile(req.id",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(data",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.uploadavatar",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.generatejwt",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.schools.create",{"_index":390,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.delete",{"_index":396,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.findfirst",{"_index":392,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.findmany",{"_index":391,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.update",{"_index":393,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.tasks.create",{"_index":473,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.delete",{"_index":484,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.findfirst",{"_index":476,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.findmany",{"_index":475,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.update",{"_index":480,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.users.create",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.findfirst",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.update",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.req.user.id",{"_index":466,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.schoolservice.create(createschooldto",{"_index":369,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findall",{"_index":370,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findone(+id",{"_index":372,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.remove(+id",{"_index":376,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.update(+id",{"_index":374,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.taskservice.createtask(body",{"_index":437,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.deletetask(+id",{"_index":447,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.getalltask",{"_index":438,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.gettaskbyid(+id",{"_index":441,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.updatetask(+id",{"_index":444,"title":{},"body":{"controllers/TaskController.html":{}}}],["throw",{"_index":158,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["tidak",{"_index":470,"title":{},"body":{"injectables/TaskService.html":{}}}],["touch",{"_index":587,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["try",{"_index":478,"title":{},"body":{"injectables/TaskService.html":{}}}],["twitter",{"_index":593,"title":{},"body":{"index.html":{}}}],["type",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":488,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"dependencies.html":{}}}],["types/bcrypt",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["types/multer",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["types/passport",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":551,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":152,"title":{},"body":{"classes/AuthGuard.html":{}}}],["unit",{"_index":565,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["unlicensed",{"_index":606,"title":{},"body":{"properties.html":{}}}],["update",{"_index":345,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["update(id",{"_index":355,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["updateavatar",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatedata",{"_index":479,"title":{},"body":{"injectables/TaskService.html":{}}}],["updateschooldto",{"_index":356,"title":{"classes/UpdateSchoolDto.html":{}},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["updatetask",{"_index":412,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updatetask(@param('id",{"_index":443,"title":{},"body":{"controllers/TaskController.html":{}}}],["updatetask(id",{"_index":424,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updatetaskdto",{"_index":425,"title":{"classes/UpdateTaskDto.html":{}},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["upload",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadavatar",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadavatar(user_id",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadedfile",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["uploads/image",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard)@delete('/:id",{"_index":417,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get",{"_index":419,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get('/:id",{"_index":422,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get('profile",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard)@patch('/:id",{"_index":426,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@useinterceptors(undefined)@post('avatar",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard)@usepipes(validationpipe)@post",{"_index":414,"title":{},"body":{"controllers/TaskController.html":{}}}],["useinterceptors",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["usepipes",{"_index":429,"title":{},"body":{"controllers/TaskController.html":{}}}],["usepipes(validationpipe",{"_index":435,"title":{},"body":{"controllers/TaskController.html":{}}}],["user",{"_index":149,"title":{},"body":{"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["user_id",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":287,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":289,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationpipe",{"_index":428,"title":{},"body":{"controllers/TaskController.html":{}}}],["validator",{"_index":275,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateTaskDto.html":{},"dependencies.html":{}}}],["value",{"_index":612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":503,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":607,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":604,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":560,"title":{},"body":{"index.html":{}}}],["website",{"_index":591,"title":{},"body":{"index.html":{}}}],["world",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":581,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            SchoolModule\n                        \n                        \n                            TaskModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TaskModule } from './task/task.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { SchoolModule } from './school/school.module';\n\n@Module({\n  imports: [\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'public'),\n    }),\n    TaskModule,\n    PrismaModule,\n    AuthModule,\n    SchoolModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                avatar\n                            \n                            \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                profile\n                            \n                            \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        avatar\n                        \n                    \n                \n            \n            \n                \n                    \n                    avatar(req, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@UseInterceptors(undefined)@Post('avatar')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                    \n                    profile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Req,\n  Post,\n  Body,\n  Get,\n  UseGuards,\n  UploadedFile,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { RegisterDto } from './dto/register.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { AuthGuard } from './auth.guard';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('register')\n  async register(@Body() data: RegisterDto) {\n    return this.authService.register(data);\n  }\n\n  @Post('login')\n  async login(@Body() data: LoginDto) {\n    return this.authService.login(data);\n  }\n\n  @UseGuards(AuthGuard)\n  @Get('profile')\n  async profile(@Req() req) {\n    return await this.authService.profile(req.id);\n  }\n\n  @UseGuards(AuthGuard)\n  @UseInterceptors(\n    FileInterceptor('avatar', {\n      storage: diskStorage({\n        destination: 'public/uploads/image',\n        filename: (req, file, cb) => {\n          cb(null, file.originalname);\n        },\n      }),\n    }),\n  )\n  @Post('avatar')\n  async avatar(@Req() req, @UploadedFile() file: Express.Multer.File) {\n    return await this.authService.uploadAvatar(\n      req.user.id,\n      '/uploads/image/' + file.filename,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthGuard.html":{"url":"classes/AuthGuard.html","title":"class - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.guard.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExecutionContext, UnauthorizedException } from '@nestjs/common';\n\nimport { AuthGuard as AuthGuardPassport } from '@nestjs/passport';\n\nexport class AuthGuard extends AuthGuardPassport('jwt') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { AuthService } from './auth.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { jwt_config } from 'src/config/config_jwt';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    }),\n    JwtModule.register({\n      secret: jwt_config.secret,\n      signOptions: {\n        expiresIn: jwt_config.expired,\n      },\n    }),\n  ],\n  providers: [AuthService, JwtStrategy],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateJWT\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                profile\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateJWT\n                        \n                    \n                \n            \n            \n                \ngenerateJWT(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                    \n                    profile(user_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: RegisterDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadAvatar(user_id: number, avatar)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    avatar\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable, HttpStatus } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { RegisterDto } from './dto/register.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { hash, compare } from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\nimport { jwt_config } from 'src/config/config_jwt';\n@Injectable()\nexport class AuthService {\n  constructor(private prisma: PrismaService, private jwtService: JwtService) {}\n\n  async register(data: RegisterDto) {\n    const checkUserExists = await this.prisma.users.findFirst({\n      where: {\n        email: data.email,\n      },\n    });\n    if (checkUserExists) {\n      throw new HttpException('User alredy registered', HttpStatus.FOUND);\n    }\n    data.password = await hash(data.password, 12);\n    const createUser = await this.prisma.users.create({\n      data: data,\n    });\n    if (createUser) {\n      return {\n        statusCode: 200,\n        message: 'User created',\n      };\n    }\n  }\n  async login(data: LoginDto) {\n    const checkUserExists = await this.prisma.users.findFirst({\n      where: {\n        email: data.email,\n      },\n    });\n    if (!checkUserExists) {\n      throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n    }\n\n    const checkPassword = await compare(\n      data.password,\n      checkUserExists.password,\n    );\n    if (checkPassword) {\n      const accesToken = this.generateJWT({\n        sub: checkUserExists.id,\n        name: checkUserExists.name,\n        email: checkUserExists.email,\n      });\n      return {\n        statusCode: 200,\n        message: 'Login berhasil',\n        accesToken: accesToken,\n      };\n    } else {\n      throw new HttpException(\n        'User or password not match',\n        HttpStatus.UNAUTHORIZED,\n      );\n    }\n  }\n  generateJWT(payload: any) {\n    return this.jwtService.sign(payload, {\n      secret: jwt_config.secret,\n      expiresIn: jwt_config.expired,\n    });\n  }\n  async profile(user_id: number) {\n    const dataProfile = await this.prisma.users.findFirst({\n      where: {\n        id: user_id,\n      },\n      select: {\n        name: true,\n        email: true,\n        avatar: true,\n        tasks: true,\n      },\n    });\n    if (dataProfile) {\n      return {\n        statusCode: HttpStatus.OK,\n        data: dataProfile,\n      };\n    }\n    throw new HttpException('user not found', HttpStatus.NOT_FOUND);\n  }\n  async uploadAvatar(user_id: number, avatar) {\n    const checkUserExists = await this.prisma.users.findFirst({\n      where: {\n        id: user_id,\n      },\n    });\n    if (checkUserExists) {\n      const updateAvatar = await this.prisma.users.update({\n        data: {\n          avatar: avatar,\n        },\n        where: {\n          id: user_id,\n        },\n      });\n      if (updateAvatar) {\n        return {\n          statusCode: 200,\n          message: 'Upload avatar berhasil',\n        };\n      }\n    }\n    throw new HttpException('Bad request', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSchoolDto.html":{"url":"classes/CreateSchoolDto.html","title":"class - CreateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/create-school.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    \n                                school_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        school_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class CreateSchoolDto {\n  @IsString()\n  @IsNotEmpty()\n  school_name: string;\n\n  @IsString()\n  @IsOptional()\n  @IsEmail()\n  email?: string;\n\n  @IsString()\n  @IsOptional()\n  address?: string;\n\n  @IsString()\n  @IsOptional()\n  phone?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDto.html":{"url":"classes/CreateTaskDto.html","title":"class - CreateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/create-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_user\n                            \n                            \n                                    \n                                    \n                                task_description\n                            \n                            \n                                    \n                                    \n                                task_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty } from 'class-validator';\nexport class CreateTaskDto {\n  @IsNotEmpty()\n  @IsString()\n  task_name: string;\n\n  @IsNotEmpty()\n  @IsString()\n  task_description: string;\n\n  id_user: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { jwt_config } from 'src/config/config_jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwt_config.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    return {\n      id: payload.sub,\n      email: payload.email,\n      expired: payload.exp,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsNotEmpty,\n  IsEmail,\n  MinLength,\n  MaxLength,\n} from 'class-validator';\n\nexport class LoginDto {\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit, INestApplication } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsNotEmpty,\n  IsEmail,\n  MinLength,\n  MaxLength,\n} from 'class-validator';\n\nexport class RegisterDto {\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/School.html":{"url":"classes/School.html","title":"class - School","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/entities/school.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class School {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SchoolController.html":{"url":"controllers/SchoolController.html","title":"controller - SchoolController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SchoolController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                school\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createSchoolDto: CreateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/school/school.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSchoolDto\n                                    \n                                                CreateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/school/school.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/school/school.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/school/school.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateSchoolDto: UpdateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/school/school.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSchoolDto\n                                    \n                                                UpdateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { SchoolService } from './school.service';\nimport { CreateSchoolDto } from './dto/create-school.dto';\nimport { UpdateSchoolDto } from './dto/update-school.dto';\n\n@Controller('school')\nexport class SchoolController {\n  constructor(private readonly schoolService: SchoolService) {}\n\n  @Post()\n  async create(@Body() createSchoolDto: CreateSchoolDto) {\n    return await this.schoolService.create(createSchoolDto);\n  }\n\n  @Get()\n  async findAll() {\n    return await this.schoolService.findAll();\n  }\n\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    return await this.schoolService.findOne(+id);\n  }\n\n  @Patch(':id')\n  async update(\n    @Param('id') id: string,\n    @Body() updateSchoolDto: UpdateSchoolDto,\n  ) {\n    return await this.schoolService.update(+id, updateSchoolDto);\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    return await this.schoolService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchoolModule.html":{"url":"modules/SchoolModule.html","title":"module - SchoolModule","body":"\n                   \n\n\n\n\n    Modules\n    SchoolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_imports\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/school/school.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SchoolService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SchoolController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SchoolService } from './school.service';\nimport { SchoolController } from './school.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [SchoolController],\n  providers: [SchoolService],\n})\nexport class SchoolModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolService.html":{"url":"injectables/SchoolService.html","title":"injectable - SchoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/school/school.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createSchoolDto: CreateSchoolDto)\n                \n            \n\n\n            \n                \n                    Defined in src/school/school.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSchoolDto\n                                    \n                                                CreateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/school/school.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/school/school.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/school/school.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateSchoolDto: UpdateSchoolDto)\n                \n            \n\n\n            \n                \n                    Defined in src/school/school.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSchoolDto\n                                    \n                                                UpdateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateSchoolDto } from './dto/create-school.dto';\nimport { UpdateSchoolDto } from './dto/update-school.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class SchoolService {\n  constructor(private prisma: PrismaService) {}\n\n  async create(createSchoolDto: CreateSchoolDto) {\n    return await this.prisma.schools.create({\n      data: createSchoolDto,\n    });\n  }\n\n  async findAll() {\n    return await this.prisma.schools.findMany();\n  }\n\n  async findOne(id: number) {\n    return await this.prisma.schools.findFirst({\n      where: {\n        id: id,\n      },\n    });\n  }\n\n  async update(id: number, updateSchoolDto: UpdateSchoolDto) {\n    return await this.prisma.schools.update({\n      data: updateSchoolDto,\n      where: {\n        id: id,\n      },\n    });\n  }\n\n  async remove(id: number) {\n    const checkId = await this.prisma.schools.findFirst({\n      where: {\n        id: id,\n      },\n    });\n    if (!checkId) {\n      throw new NotFoundException('id school not found');\n    }\n    return await this.prisma.schools.delete({\n      where: {\n        id: id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/data/task.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            task_description\n                                        \n                                \n                                \n                                        \n                                            task_id\n                                        \n                                \n                                \n                                        \n                                            task_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        task_description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n  task_id: number;\n  task_name: string;\n  task_description: string;\n}\nexport const tasks: Task[] = [\n  {\n    task_id: 1,\n    task_name: ' task 1',\n    task_description: 'description task 1',\n  },\n  {\n    task_id: 2,\n    task_name: ' task 2',\n    task_description: 'description task 2',\n  },\n  {\n    task_id: 3,\n    task_name: ' task 3',\n    task_description: 'description task 3',\n  },\n];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createTask\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteTask\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAllTask\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTaskById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTask(body: CreateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@UsePipes(ValidationPipe)@Post()\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        deleteTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTask(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getAllTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTask()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTaskById(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTask(id, body: UpdateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Patch('/:id')\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                UpdateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Post,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  ValidationPipe,\n  UsePipes,\n  UseGuards,\n} from '@nestjs/common';\nimport { TaskService } from './task.service';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { UpdateTaskDto } from './dto/update-task.dto';\nimport { AuthGuard } from 'src/auth/auth.guard';\n\n@Controller('task')\nexport class TaskController {\n  constructor(private taskService: TaskService) {}\n\n  @UseGuards(AuthGuard)\n  @UsePipes(ValidationPipe)\n  @Post()\n  async createTask(@Body() body: CreateTaskDto) {\n    return await this.taskService.createTask(body);\n  }\n\n  @UseGuards(AuthGuard)\n  @Get()\n  async getAllTask() {\n    return await this.taskService.getAllTask();\n  }\n\n  @UseGuards(AuthGuard)\n  @Get('/:id')\n  async getTaskById(@Param('id') id) {\n    return await this.taskService.getTaskById(+id);\n  }\n\n  @UseGuards(AuthGuard)\n  @Patch('/:id')\n  async updateTask(@Param('id') id, @Body() body: UpdateTaskDto) {\n    return await this.taskService.updateTask(+id, body);\n  }\n\n  @UseGuards(AuthGuard)\n  @Delete('/:id')\n  async deleteTask(@Param('id') id) {\n    return await this.taskService.deleteTask(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_TaskModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskController } from './task.controller';\nimport { TaskService } from './task.service';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  controllers: [TaskController],\n  providers: [TaskService],\n  imports: [PrismaModule],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTask\n                            \n                            \n                                    Async\n                                deleteTask\n                            \n                            \n                                    Async\n                                getAllTask\n                            \n                            \n                                    Async\n                                getTaskById\n                            \n                            \n                                    Async\n                                updateTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, req: any)\n                    \n                \n                        \n                            \n                                Defined in src/task/task.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        req\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTask(data: CreateTaskDto)\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTask(id)\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTask()\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTaskById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTask(id, data: UpdateTaskDto)\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { tasks } from './data/task';\nimport { UpdateTaskDto } from './dto/update-task.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { REQUEST } from '@nestjs/core';\nimport { Inject } from '@nestjs/common';\n\n@Injectable()\nexport class TaskService {\n  constructor(\n    private prisma: PrismaService,\n    @Inject(REQUEST) private req: any,\n  ) {}\n  async createTask(data: CreateTaskDto) {\n    data.id_user = this.req.user.id;\n    if (!data.task_name) {\n      return {\n        statusCode: 400,\n        message: 'parameter tidak ditemukan',\n      };\n    }\n    const createData = await this.prisma.tasks.create({\n      data: data,\n    });\n    return {\n      statusCode: 200,\n      data: createData,\n    };\n  }\n  async getAllTask() {\n    const getAllData = await this.prisma.tasks.findMany({\n      where: { id_user: this.req.user.id },\n    });\n    return {\n      statusCode: 200,\n      data: getAllData,\n    };\n  }\n\n  async getTaskById(id: number) {\n    const getTaskById = await this.prisma.tasks.findFirst({\n      where: {\n        id: id,\n        id_user: this.req.user.id,\n      },\n    });\n    if (getTaskById === null) {\n      return {\n        statusCode: 400,\n        message: 'data tidak ditemukan',\n      };\n    }\n    return {\n      statusCode: 200,\n      data: getTaskById,\n    };\n  }\n\n  async updateTask(id, data: UpdateTaskDto) {\n    try {\n      data.id_user = this.req.user.id;\n      const updateData = await this.prisma.tasks.update({\n        data: data,\n        where: {\n          id: id,\n        },\n      });\n      return {\n        statusCode: 200,\n        data: updateData,\n      };\n    } catch {\n      return {\n        statusCode: 500,\n        message: 'data tidak ditemukan',\n      };\n    }\n  }\n\n  async deleteTask(id) {\n    const deleteData = await this.prisma.tasks.delete({\n      where: {\n        id: id,\n      },\n    });\n    return {\n      statusCode: 200,\n      data: deleteData,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSchoolDto.html":{"url":"classes/UpdateSchoolDto.html","title":"class - UpdateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/update-school.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSchoolDto } from './create-school.dto';\n\nexport class UpdateSchoolDto extends PartialType(CreateSchoolDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTaskDto.html":{"url":"classes/UpdateTaskDto.html","title":"class - UpdateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/update-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_user\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                task_description\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                task_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\nexport class UpdateTaskDto {\n  @IsOptional()\n  @IsString()\n  task_name?: string;\n\n  @IsOptional()\n  @IsString()\n  task_description?: string;\n\n  id_user: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            class\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/config_jwt.ts\n            \n            variable\n            jwt_config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/school/dto/create-school.dto.ts\n            \n            class\n            CreateSchoolDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/school/dto/update-school.dto.ts\n            \n            class\n            UpdateSchoolDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/entities/school.entity.ts\n            \n            class\n            School\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/school.controller.ts\n            \n            controller\n            SchoolController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/school/school.service.ts\n            \n            injectable\n            SchoolService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/task/data/task.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/data/task.ts\n            \n            variable\n            tasks\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/task/dto/create-task.dto.ts\n            \n            class\n            CreateTaskDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/dto/update-task.dto.ts\n            \n            class\n            UpdateTaskDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/task/task.service.ts\n            \n            injectable\n            TaskService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.21\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.0.3\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.4.2\n        \n            @nestjs/serve-static : ^3.0.1\n        \n            @prisma/client : ^4.16.0\n        \n            @types/bcrypt : ^5.0.0\n        \n            @types/multer : ^1.4.7\n        \n            @types/passport-jwt : ^3.0.8\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchoolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_providers\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            jwt_config   (src/.../config_jwt.ts)\n                        \n                        \n                            tasks   (src/.../task.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/config_jwt.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwt_config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret: 'immapp',\n  expired: 3600,\n}\n                    \n                \n\n\n        \n    \n\n    src/task/data/task.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    task_id: 1,\n    task_name: ' task 1',\n    task_description: 'description task 1',\n  },\n  {\n    task_id: 2,\n    task_name: ' task 2',\n    task_description: 'description task 2',\n  },\n  {\n    task_id: 3,\n    task_name: ' task 3',\n    task_description: 'description task 3',\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
